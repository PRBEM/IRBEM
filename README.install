                   IRBEM-LIB


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!   You must have a Fortran compiler in order to build the IRBEM-LIB distribution.    !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Requests for assistance or documentation should be sent to:

  Internet -- sebastien.bourdarie@onera.fr

If you get the distribution, please send to sebastien.bourdarie@onera.fr a 
message so we can put you on our mailing list.  
That way you will be notified of new releases. 


Installation Instructions
-------------------------

IRBEM-LIB has a makefile setup to automatically build the library.

If you want to use the TS07d libraries then follow the additional instructions 
in the TS07D section below these instructions:

** The following steps should be taken to build and install IRBEM-LIB:

        1. Set your current directory (cd) to the top level IRBEM-LIB
	 directory. 

        2. Compile/link the distribution.  First enter...

              make all.help

           For example, to build the distribution on a SunOS system using
           the gnu Fortran compiler enter...

              make OS=sunos ENV=gnu64 all

           The `OS' and `ENV' variables are described in the `make all.help'
           part of this step.

        3. Install the libraries.
	   First enter...

              make install.help

           to determine the required/optional `make' variables to be used.
           Then enter...

              make `make variables...' install

           The appropriate files will be copied to the `matlab'
           and top level IRBEM-LIB directories (from the `source/...'
           directory).

           For example, to install the distribution compiled with the OS and
           ENV specified above to the directory `/usr/local/irbem_lib'
           enter...

              make OS=sunos ENV=gnu64 INSTALLDIR=/usr/local/irbem_lib install

           The `INSTALLDIR' variable is described in the `make install.help'
           part of this step.

        4. Test that the distribution was built correctly by entering...
	   First enter...

              make test.help

           to determine the required/optional `make' variables to be used.
           Then enter...


              make `make variables...' test

           The name of each test executed and results will be displayed.

        5. Delete the library(s), object files, and executables in the
           `source/...' directory by entering...

              make clean

** TS07D setup:

    1. Set the global variable TS07_DATA_PATH to a directory of your choice
       This directory will contain the tail par and coefficient files.
       You will need ~8.5 GB space to for the files (2007-2016 coefficients)
    2. run the setup_ts07d_files.sh script. If successful the go to (3)

    +++ The setup_ts07d_files.sh bash script can be used to accomplish 
        STEPS (a) through (d) BELOW. If it fails then you may have to change the script
        or follow steps a-d manually

        a. Download the required all.tgz file from http://rbspgway.jhuapl.edu/new_coeffs_mag_models
          and put it in TS07_DATA_PATH directory
        b. Download the TAIL_PAR.zip file from http://rbspgway.jhuapl.edu/sites/default/files/SpaceWeather/TAIL_PAR.zip, and put in the TS07_DATA_PATH directory

        c. Unpack the coeff*.par files to subdirectories Coeffs/YYYY_DOY/
        d. Unzip TAIL_PAR.zip into a subdirectory named TAIL_PAR under the TS07_DATA_PATH directory
            specified in (a) above

    3. Follow the installation instructions to install IRBEM in the usual way, if you haven't done that already

    +++ ADDITIONAL NOTES (as documentation still requires updating)
    +++ The IRBEM code will compile regardless of whether you have completed this setup procedure or not
    +++ The code will fail if the tail par files are not found, however, only baddata (-1e31)
        will be returned if coefficient files are not found. The code does output an error message 
        in FORTRAN, which may not be visible if you are running the code from MATLAB, but will not 
        cause an actual error.
    +++ The code also will automatically round down to the nearest 5-min coefficient file. 
        If you are running with a time resolution greater than 5 minutes, want to 
        interpolate B-field results yourself, and decrease execution time, then restrict your
        input times to multiples of 5-min with 0 sec.
